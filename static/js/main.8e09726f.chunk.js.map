{"version":3,"sources":["Tile.js","Row.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","className","id","value","onClick","handleClick","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","type","Row","Array","from","length","v","i","board","row","App","useState","fill","setBoard","turn","setTurn","resultModal","setResultModal","useEffect","bootstrap","Modal","document","getElementById","keyboard","backdrop","Popover","querySelector","container","html","restart","window","location","reload","e","column","target","tile","position","getLowestPlace","_board","animate","opacity","background","duration","delay","setTimeout","classList","add","animateDrop","checkWin","show","_turn","current","includes","nw","Math","min","ne","count","temp_column","temp_row","tabIndex","close","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e09726f.chunk.js","sourcesContent":["import './Tile.css'\r\n\r\nexport default function Tile(props) {\r\n\treturn (\r\n\t\t<td className=\"border\">\r\n\t\t\t<span className=\"tile\" id={props.value} onClick={props.handleClick} onMouseEnter={props.handleMouseEnter} onMouseLeave={props.handleMouseLeave} >\r\n\t\t\t\t<input type=\"hidden\" value={props.value} />\r\n\t\t\t</span>\r\n\t\t</td>\r\n\t)\r\n}","import Tile from \"./Tile\";\r\n\r\nexport default function Row(props) {\r\n\treturn (\r\n\t\t<tr>{ Array.from({length: 7}, (v, i) => \r\n\t\t\t<Tile key={i} board={props.board} value={props.row*7 + i} handleClick={props.handleClick} handleMouseEnter={props.handleMouseEnter} handleMouseLeave={props.handleMouseLeave} />\r\n\t\t) }</tr>\r\n\t)\r\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport bootstrap from 'bootstrap/dist/js/bootstrap'\nimport './App.css';\nimport Row from './Row';\nimport { useEffect, useState } from 'react';\n\nexport default function App() {\n\tconst [ board, setBoard ] = useState(Array(42).fill(\"\"))\n\tconst [ turn, setTurn ] = useState(\"Blue\")\n\tconst [ resultModal, setResultModal ] = useState(null)\n\tuseEffect(() => {\n\t\tsetResultModal(new bootstrap.Modal(document.getElementById('resultModal'), { keyboard: false, backdrop: 'static' }))\n\t\tnew bootstrap.Popover(document.querySelector('[data-bs-toggle=\"popover\"]'), { container: 'body', html: true })\n\t}, [])\n\tconst restart = () => window.location.reload()\n\tconst animateDrop = (row, column) => {\n\t\tfor(let i = 0; i < row; ++i) {\n\t\t\tdocument.getElementById(i*7 + column).animate(\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\tbackground: turn === \"Blue\" ? \"radial-gradient(circle at 2rem 2rem, dodgerblue, #333)\" : \"radial-gradient(circle at 2rem 2rem, crimson, #333)\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tbackground: turn === \"Blue\" ? \"radial-gradient(circle at 2rem 2rem, dodgerblue, #333)\" : \"radial-gradient(circle at 2rem 2rem, crimson, #333)\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t{\n\t\t\t\t\tduration: 100,\n\t\t\t\t\tdelay: i * 100\n\t\t\t\t}\n\t\t\t)\n\t\t}\n\t\tsetTimeout(() => document.getElementById(row*7 + column).classList.add(turn), row*100)\n\t}\n\tconst handleMouseEnter = (e) => {\n\t\tconst column = e.target.querySelector('input').value % 7\n\t\tdocument.getElementById(\"arrow\" + column).className = turn === \"Blue\" ? \"bg-primary\" : \"bg-danger\"\n\t}\n\tconst handleMouseLeave = (e) => {\n\t\tconst column = e.target.querySelector('input').value % 7\n\t\tdocument.getElementById(\"arrow\" + column).className = \"\"\n\t}\n\tconst handleClick = (e) => {\n\t\tconst tile = e.target.querySelector('input').value\n\t\tconst position = getLowestPlace(tile)\n\t\tlet _board = [ ...board ]\n\t\tif(position !== false) {\n\t\t\t_board[position] = turn === \"Blue\" ? \"Blue\" : \"Red\"\n\t\t\tconst column = position % 7\n\t\t\tconst row = (position - column) / 7\n\t\t\tanimateDrop(row, column)\n\t\t\tsetBoard(_board)\n\t\t\tconst result = checkWin(position)\n\t\t\tswitch(result) {\n\t\t\t\tcase 1:\n\t\t\t\t\tresultModal.show()\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\trestart()\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tsetTurn(_turn => turn === \"Blue\" ? \"Red\" : \"Blue\")\n\t\t\t}\n\t\t}\n\t}\n\tconst getLowestPlace = (current) => {\n\t\tconst column = current % 7\n\t\tlet row = 5\n\t\twhile(row >= 0) {\n\t\t\tif(board[row*7 + column] === \"\") {\n\t\t\t\treturn row*7 + column\n\t\t\t}\n\t\t\t--row;\n\t\t}\n\t\treturn false\n\t}\n\tconst checkWin = (current) => {\n\t\tif(!board.includes(\"\")) return 2\t\t\t\t\t\t\t// If board is fully filled\n\t\tconst column = current % 7\n\t\tconst row = (current - column) / 7\n\t\tlet nw = Math.min(column, row)\n\t\tlet ne = Math.min(6-column, row)\n\t\tlet count = 0\n\t\t// Horizontal\n\t\tfor(let temp_column = 0; temp_column < 7; ++temp_column) {\n\t\t\tif(board[row*7 + temp_column] === turn) {\n\t\t\t\tif(++count > 2) return 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount = 0\n\t\t\t}\n\t\t}\n\t\tcount = 0\n\t\t// Vertical\n\t\tfor(let temp_row = 0; temp_row < 6; ++temp_row) {\n\t\t\tif(board[temp_row*7 + column] === turn) {\n\t\t\t\tif(++count > 2) return 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount = 0\n\t\t\t}\n\t\t}\n\t\tcount = 0\n\t\t// L2R Diagonal\n\t\tfor(let temp_row = row - nw, temp_column = column - nw; temp_row < 5 || temp_column < 6; ++temp_row, ++temp_column) {\n\t\t\tif(board[temp_row*7 + temp_column] === turn) {\n\t\t\t\tif(++count > 2) return 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount = 0\n\t\t\t}\n\t\t}\n\t\tcount = 0\n\t\t// R2l Diagonal\n\t\tfor(let temp_row = row - ne, temp_column = column + ne; temp_row < 5 || temp_column > 0; ++temp_row, --temp_column) {\n\t\t\tif(board[temp_row*7 + temp_column] === turn) {\n\t\t\t\tif(++count > 2) return 1\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcount = 0\n\t\t\t}\n\t\t}\n\t\tcount = 0\n\t\treturn 0\n\t}\n\treturn(\n\t\t<main>\n\t\t\t<div className=\"modal fade\" id=\"resultModal\" tabIndex=\"-1\" aria-labelledby=\"resultModalLabel\" aria-hidden=\"true\">\n\t\t\t\t<div className=\"modal-dialog modal-dialog-centered\">\n\t\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t\t<h3 className=\"modal-title\" id=\"resultModalLabel\">Game Over</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<span className={turn === \"Blue\" ? \"text-primary\" : \"text-danger\"}>{turn}</span> has won the game!\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={window.close}>Exit</button>\n\t\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={restart}>Restart</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"card shadow-lg text-center p-3\">\n\t\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t\t<h1 className={turn === \"Blue\" ? \"text-primary\" : \"text-danger\"}>Connect 4</h1>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-warning fs-5\" data-bs-container=\"body\" data-bs-toggle=\"popover\" data-bs-placement=\"bottom\"\n\t\t\t\t\t\tdata-bs-content=\"<ul>\n\t\t\t\t\t\t\t<li>First, decide who goes first and what color each player will have.</li>\n\t\t\t\t\t\t\t<li>Players must alternate turns, and only one disc can be dropped in each turn.</li>\n\t\t\t\t\t\t\t<li>On your turn, drop one of your colored discs from the top into any of the seven slots.</li>\n\t\t\t\t\t\t\t<li>The game ends when there are 4 of the same colored discs in a row (either vertically, horizontally, or diagonally) or a stalemate.</li>\n\t\t\t\t\t\t\t<li>The starter of the previous game goes second on the next game.</li>\n\t\t\t\t\t\t</ul>\"\n\t\t\t\t\t>Instructions</button>\n\t\t\t\t</div>\n\t\t\t\t<table className=\"table bg-secondary m-0\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"bg-white\">\n\t\t\t\t\t\t\t<th id=\"arrow0\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow1\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow2\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow3\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow4\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow5\"></th>\n\t\t\t\t\t\t\t<th id=\"arrow6\"></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ Array.from({length: 6}, (v, i) => \n\t\t\t\t\t\t\t<Row key={i} board={board} row={i} handleClick={handleClick} handleMouseEnter={handleMouseEnter} handleMouseLeave={handleMouseLeave} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}